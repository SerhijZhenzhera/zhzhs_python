'''
Task 1(3) Joins
Use the sample SQLite database hr.db (same database you used in the previous lesson for homework tasks)
As a solution to HW, create a file named: task1.sql with all SQL queries:
    write a query in SQL to display the first name, last name, department number, and department name for each employee
    write a query in SQL to display the first and last name, department, city, and state province for each employee
    write a query in SQL to display the first name, last name, department number, and department name,
        for all employees for departments 80 or 40
    write a query in SQL to display all departments including those where does not have any employee
    write a query in SQL to display the first name of all employees including the first name of their manager
    write a query in SQL to display the job title, full name (first and last name ) of the employee,
        and the difference between the maximum salary for the job and the salary of the employee
    write a query in SQL to display the job title and the average salary of employees
    write a query in SQL to display the full name (first and last name), and salary of those employees
        who work in any department located in London
    write a query in SQL to display the department name and the number of employees in each department
'''

# [https://www.w3resource.com/sql-exercises/joins-hr/sql-joins-hr-exercise-1.php]
# [https://www.w3resource.com/sql-exercises/joins-hr/sql-joins-hr-exercise-2.php]
# [https://www.w3resource.com/sql-exercises/joins-hr/sql-joins-hr-exercise-4.php]
# [https://www.w3resource.com/sql-exercises/joins-hr/sql-joins-hr-exercise-6.php]
    # add for task 4 [http://www.skillz.ru/dev/php/article-Obyasnenie_SQL_obedinenii_JOIN_INNER_OUTER.html]
# [https://www.w3resource.com/sql-exercises/joins-hr/sql-joins-hr-exercise-8.php]
# [https://www.w3resource.com/sql-exercises/joins-hr/sql-joins-hr-exercise-14.php]
# [https://www.w3resource.com/mysql-exercises/join-exercises/write-a-query-to-display-the-job-title-and-average-salary-of-employees.php]
# [https://www.w3resource.com/sql-exercises/joins-hr/sql-joins-hr-exercise-24.php]
# [https://www.w3resource.com/mysql-exercises/join-exercises/write-a-query-to-get-the-department-name-and-number-of-employees-in-the-department.php]


import sqlite3

# zvjazok = sqlite3.connect('hr_1.db')
zvjazok = sqlite3.connect('R:\\Beetroot\\Python\\38\\hr_1.db')
nakaz = zvjazok.cursor()

'''
nakaz.execute("SELECT name FROM sqlite_master WHERE type = 'table';")
all_results = nakaz.fetchall()
print('full tables list ->', all_results)

nakaz.execute("SELECT sql FROM sqlite_master WHERE name='employees';")
test_results = nakaz.fetchall()
print(test_results)

nakaz.execute("SELECT sql FROM sqlite_master WHERE name='departments';")
test_results = nakaz.fetchall()
print(test_results)

---------- from QUERIES ----------
full tables list -> [('countries',), ('regions',), ('locations',), ('departments',), ('jobs',), ('employees',), ('department',),
('job_history',), ('prod_mast',), ('prod_backup',), ('orders',), ('tb1',), ('ESERCICIO1',), ('users',), ('tags',), ('s',),
('r',), ('Emor',), ('MIN_SALARY',), ('employee_data',), ('STUDENT',), ('EMPLOYEE_INCOME',), ('details',)]

[('CREATE TABLE employees(\nemployee_id integer(3) primary key not null,\nfirst_name varchar(20),\nlast_name varchar(25),
\nemail varchar(25),\nphone_number varchar(20),\nhire_date date,\njob_id varchar(10) not null,\nsalary decimal,
\ncommission_pct number,\nmanager_id integer(3),\ndepartment_id integer(3), Avg_Salary NUMERIC)',)]

[('CREATE TABLE departments(\ndepartment_id integer(3) primary key not null,\ndepart_name varchar(20) not null,
\nmanager_id integer(3) not null,\nlocation_id integer(4))',)]
'''


nakaz.execute("SELECT E.first_name, E.last_name, E.department_id, D.depart_name FROM employees E JOIN departments D ON E.department_id = D.department_id;")
task_1_results = nakaz.fetchall()
print('___TASK 1:', task_1_results)

nakaz.execute("SELECT E.first_name, E.last_name, D.depart_name, L.city, L.state_province FROM employees E JOIN departments D ON E.department_id = D.department_id JOIN locations L ON D.location_id = L.location_id;")
task_2_results = nakaz.fetchall()
print('___TASK 2:', task_2_results)

nakaz.execute("SELECT E.first_name, E.last_name, E.department_id, D.depart_name FROM employees E JOIN departments D ON E.department_id = D.department_id AND E.department_id IN (80 , 40) ORDER BY E.last_name;")
task_3_results = nakaz.fetchall()
print('___TASK 3:', task_3_results)

'''
nakaz.execute("SELECT E.first_name, E.last_name, D.department_id, D.depart_name FROM employees E RIGHT OUTER JOIN departments D ON E.department_id = D.department_id;")
____add ("SELECT E.first_name, E.last_name, D.department_id, D.depart_name FROM employees E RIGHT OUTER JOIN departments D ON E.department_id = D.department_id WHERE E.department.id IS null;")
task_test = nakaz.fetchall()
print('TASK test (4):', task_test)
'''

nakaz.execute("SELECT D.depart_name FROM departments D;")
task_4_results = nakaz.fetchall()
print('___TASK 4:', task_4_results)

nakaz.execute("SELECT E.first_name AS 'Employee Name', M.first_name AS 'Manager' FROM employees E JOIN employees M ON E.manager_id = M.employee_id;")
task_5_results = nakaz.fetchall()
print('___TASK 5:', task_5_results)

nakaz.execute("SELECT job_title, first_name || ' ' || last_name AS Employee_name, max_salary-salary AS salary_difference FROM employees NATURAL JOIN jobs;")
task_6_results = nakaz.fetchall()
print('___TASK 6:', task_6_results)

nakaz.execute("SELECT job_title, AVG(salary) FROM employees NATURAL JOIN jobs GROUP BY job_title;")
task_7_results = nakaz.fetchall()
print('___TASK 7:', task_7_results)

nakaz.execute("SELECT first_name || ' ' || last_name AS Employee_name, salary FROM employees JOIN departments USING (department_id) JOIN  locations USING (location_id)	WHERE  city = 'London';")
task_8_results = nakaz.fetchall()
print('___TASK 8:', task_8_results)

nakaz.execute("SELECT depart_name AS 'Department Name', COUNT(*) AS 'No of Employees' FROM departments INNER JOIN employees ON employees.department_id = departments.department_id GROUP BY departments.department_id, depart_name ORDER BY depart_name;")
task_9_results = nakaz.fetchall()
print('___TASK 9:', task_9_results)



'''
---output---
___TASK 1: [('Steven', 'King', 90, 'Executive'), ('Neena', 'Kochhar', 90, 'Executive'), ('Lex', 'De Haan', 90, 'Executive'), ('Alexander', 'Hunold', 60, 'IT'), ('Bruce', 'Ernst', 60, 'IT'), ('David', 'Austin', 60, 'IT'), ('Valli', 'Pataballa', 60, 'IT'), ('Diana', 'Lorentz', 60, 'IT'), ('Nancy', 'Greenberg', 100, 'Finance'), ('Daniel', 'Faviet', 100, 'Finance'), ('John', 'Chen', 100, 'Finance'), ('Ismael', 'Sciarra', 100, 'Finance'), ('Jose Manuel', 'Urman', 100, 'Finance'), ('Luis', 'Popp', 100, 'Finance'), ('Den', 'Raphaely', 30, 'Purchasing'), ('Alexander', 'Khoo', 30, 'Purchasing'), ('Shelli', 'Baida', 30, 'Purchasing'), ('Sigal', 'Tobias', 30, 'Purchasing'), ('Guy', 'Himuro', 30, 'Purchasing'), ('Karen', 'Colmenares', 30, 'Purchasing'), ('Matthew', 'Weiss', 50, 'Shipping'), ('Adam', 'Fripp', 50, 'Shipping'), ('Payam', 'Kaufling', 50, 'Shipping'), ('Shanta', 'Vollman', 50, 'Shipping'), ('Kevin', 'Mourgos', 50, 'Shipping'), ('Julia', 'Nayer', 50, 'Shipping'), ('Irene', 'Mikkilineni', 50, 'Shipping'), ('James', 'Landry', 50, 'Shipping'), ('Steven', 'Markle', 50, 'Shipping'), ('Laura', 'Bissot', 50, 'Shipping'), ('Mozhe', 'Atkinson', 50, 'Shipping'), ('James', 'Marlow', 50, 'Shipping'), ('TJ', 'Olson', 50, 'Shipping'), ('Jason', 'Mallin', 50, 'Shipping'), ('Michael', 'Rogers', 50, 'Shipping'), ('Ki', 'Gee', 50, 'Shipping'), ('Hazel', 'Philtanker', 50, 'Shipping'), ('Renske', 'Ladwig', 50, 'Shipping'), ('Stephen', 'Stiles', 50, 'Shipping'), ('John', 'Seo', 50, 'Shipping'), ('Joshua', 'Patel', 50, 'Shipping'), ('Trenna', 'Rajs', 50, 'Shipping'), ('Curtis', 'Davies', 50, 'Shipping'), ('Randall', 'Matos', 50, 'Shipping'), ('Peter', 'Vargas', 50, 'Shipping'), ('John', 'Russell', 80, 'Sales'), ('Karen', 'Partners', 80, 'Sales'), ('Alberto', 'Errazuriz', 80, 'Sales'), ('Gerald', 'Cambrault', 80, 'Sales'), ('Eleni', 'Zlotkey', 80, 'Sales'), ('Peter', 'Tucker', 80, 'Sales'), ('David', 'Bernstein', 80, 'Sales'), ('Peter', 'Hall', 80, 'Sales'), ('Christopher', 'Olsen', 80, 'Sales'), ('Nanette', 'Cambrault', 80, 'Sales'), ('Oliver', 'Tuvault', 80, 'Sales'), ('Janette', 'King', 80, 'Sales'), ('Patrick', 'Sully', 80, 'Sales'), ('Allan', 'McEwen', 80, 'Sales'), ('Lindsey', 'Smith', 80, 'Sales'), ('Louise', 'Doran', 80, 'Sales'), ('Sarath', 'Sewall', 80, 'Sales'), ('Clara', 'Vishney', 80, 'Sales'), ('Danielle', 'Greene', 80, 'Sales'), ('Mattea', 'Marvins', 80, 'Sales'), ('David', 'Lee', 80, 'Sales'), ('Sundar', 'Ande', 80, 'Sales'), ('Amit', 'Banda', 80, 'Sales'), ('Lisa', 'Ozer', 80, 'Sales'), ('Harrison', 'Bloom', 80, 'Sales'), ('Tayler', 'Fox', 80, 'Sales'), ('William', 'Smith', 80, 'Sales'), ('Elizabeth', 'Bates', 80, 'Sales'), ('Sundita', 'Kumar', 80, 'Sales'), ('Ellen', 'Abel', 80, 'Sales'), ('Alyssa', 'Hutton', 80, 'Sales'), ('Jonathon', 'Taylor', 80, 'Sales'), ('Jack', 'Livingston', 80, 'Sales'), ('Charles', 'Johnson', 80, 'Sales'), ('Winston', 'Taylor', 50, 'Shipping'), ('Jean', 'Fleaur', 50, 'Shipping'), ('Martha', 'Sullivan', 50, 'Shipping'), ('Girard', 'Geoni', 50, 'Shipping'), ('Nandita', 'Sarchand', 50, 'Shipping'), ('Alexis', 'Bull', 50, 'Shipping'), ('Julia', 'Dellinger', 50, 'Shipping'), ('Anthony', 'Cabrio', 50, 'Shipping'), ('Kelly', 'Chung', 50, 'Shipping'), ('Jennifer', 'Dilly', 50, 'Shipping'), ('Timothy', 'Gates', 50, 'Shipping'), ('Randall', 'Perkins', 50, 'Shipping'), ('Sarah', 'Bell', 50, 'Shipping'), ('Britney', 'Everett', 50, 'Shipping'), ('Samuel', 'McCain', 50, 'Shipping'), ('Vance', 'Jones', 50, 'Shipping'), ('Alana', 'Walsh', 50, 'Shipping'), ('Kevin', 'Feeney', 50, 'Shipping'), ('Donald', 'OConnell', 50, 'Shipping'), ('Douglas', 'Grant', 50, 'Shipping'), ('Jennifer',
'Whalen', 10, 'Administration'), ('Michael', 'Hartstein', 20, 'Marketing'), ('Pat', 'Fay', 20, 'Marketing'), ('Susan', 'Mavris', 40, 'Human Resources'), ('Hermann', 'Baer', 70, 'Public Relations'), ('Shelley', 'Higgins', 110, 'Accounting'), ('William', 'Gietz', 110, 'Accounting')]
___TASK 2: [('Steven', 'King', 'Executive', 'Seattle', 'Washington'), ('Neena', 'Kochhar', 'Executive', 'Seattle', 'Washington'), ('Lex', 'De Haan', 'Executive', 'Seattle', 'Washington'), ('Alexander', 'Hunold', 'IT', 'Southlake', 'Texas'), ('Bruce', 'Ernst', 'IT', 'Southlake', 'Texas'), ('David', 'Austin', 'IT', 'Southlake', 'Texas'), ('Valli', 'Pataballa', 'IT', 'Southlake', 'Texas'), ('Diana', 'Lorentz', 'IT', 'Southlake', 'Texas'), ('Nancy', 'Greenberg', 'Finance', 'Seattle', 'Washington'), ('Daniel', 'Faviet', 'Finance', 'Seattle', 'Washington'), ('John', 'Chen', 'Finance', 'Seattle', 'Washington'), ('Ismael', 'Sciarra', 'Finance', 'Seattle', 'Washington'), ('Jose Manuel', 'Urman', 'Finance', 'Seattle', 'Washington'), ('Luis', 'Popp', 'Finance', 'Seattle', 'Washington'), ('Den', 'Raphaely', 'Purchasing', 'Seattle', 'Washington'), ('Alexander', 'Khoo', 'Purchasing', 'Seattle', 'Washington'), ('Shelli', 'Baida', 'Purchasing', 'Seattle', 'Washington'), ('Sigal', 'Tobias', 'Purchasing', 'Seattle', 'Washington'), ('Guy', 'Himuro', 'Purchasing', 'Seattle', 'Washington'), ('Karen', 'Colmenares', 'Purchasing', 'Seattle', 'Washington'), ('Matthew', 'Weiss', 'Shipping', 'South San Francisco', 'California'), ('Adam', 'Fripp', 'Shipping', 'South San Francisco', 'California'), ('Payam', 'Kaufling', 'Shipping', 'South San Francisco', 'California'), ('Shanta', 'Vollman', 'Shipping', 'South San Francisco', 'California'), ('Kevin', 'Mourgos', 'Shipping', 'South San Francisco', 'California'), ('Julia', 'Nayer', 'Shipping', 'South San Francisco', 'California'), ('Irene', 'Mikkilineni', 'Shipping', 'South San Francisco', 'California'), ('James', 'Landry', 'Shipping', 'South San Francisco', 'California'), ('Steven', 'Markle', 'Shipping', 'South San Francisco', 'California'), ('Laura', 'Bissot', 'Shipping', 'South San Francisco', 'California'), ('Mozhe', 'Atkinson', 'Shipping', 'South San Francisco', 'California'), ('James', 'Marlow', 'Shipping', 'South San Francisco', 'California'), ('TJ', 'Olson', 'Shipping', 'South San Francisco', 'California'), ('Jason', 'Mallin', 'Shipping', 'South San Francisco', 'California'), ('Michael', 'Rogers', 'Shipping', 'South San Francisco', 'California'), ('Ki', 'Gee', 'Shipping', 'South San Francisco', 'California'), ('Hazel', 'Philtanker', 'Shipping', 'South San Francisco', 'California'), ('Renske', 'Ladwig', 'Shipping', 'South San Francisco', 'California'), ('Stephen', 'Stiles', 'Shipping', 'South San Francisco', 'California'), ('John', 'Seo', 'Shipping', 'South San Francisco', 'California'), ('Joshua', 'Patel', 'Shipping', 'South San Francisco', 'California'), ('Trenna', 'Rajs', 'Shipping', 'South San Francisco', 'California'), ('Curtis', 'Davies', 'Shipping', 'South San Francisco', 'California'), ('Randall', 'Matos', 'Shipping', 'South San Francisco', 'California'), ('Peter', 'Vargas', 'Shipping', 'South San Francisco', 'California'), ('John', 'Russell', 'Sales', 'Oxford', 'Oxford'), ('Karen', 'Partners', 'Sales', 'Oxford', 'Oxford'), ('Alberto', 'Errazuriz', 'Sales', 'Oxford', 'Oxford'), ('Gerald', 'Cambrault', 'Sales', 'Oxford', 'Oxford'), ('Eleni', 'Zlotkey', 'Sales', 'Oxford', 'Oxford'), ('Peter', 'Tucker', 'Sales', 'Oxford', 'Oxford'), ('David', 'Bernstein', 'Sales', 'Oxford', 'Oxford'), ('Peter', 'Hall', 'Sales', 'Oxford', 'Oxford'), ('Christopher', 'Olsen', 'Sales', 'Oxford', 'Oxford'), ('Nanette', 'Cambrault', 'Sales', 'Oxford', 'Oxford'), ('Oliver', 'Tuvault', 'Sales', 'Oxford', 'Oxford'), ('Janette', 'King', 'Sales', 'Oxford', 'Oxford'), ('Patrick', 'Sully', 'Sales', 'Oxford', 'Oxford'), ('Allan', 'McEwen', 'Sales', 'Oxford', 'Oxford'), ('Lindsey', 'Smith', 'Sales', 'Oxford', 'Oxford'), ('Louise', 'Doran', 'Sales', 'Oxford', 'Oxford'), ('Sarath', 'Sewall', 'Sales', 'Oxford', 'Oxford'), ('Clara', 'Vishney', 'Sales', 'Oxford', 'Oxford'), ('Danielle', 'Greene', 'Sales', 'Oxford', 'Oxford'), ('Mattea', 'Marvins', 'Sales', 'Oxford', 'Oxford'), ('David', 'Lee', 'Sales', 'Oxford', 'Oxford'), ('Sundar', 'Ande', 'Sales', 'Oxford', 'Oxford'), ('Amit', 'Banda', 'Sales', 'Oxford', 'Oxford'), ('Lisa', 'Ozer', 'Sales', 'Oxford', 'Oxford'), ('Harrison', 'Bloom', 'Sales', 'Oxford', 'Oxford'), ('Tayler', 'Fox', 'Sales', 'Oxford', 'Oxford'), ('William', 'Smith', 'Sales', 'Oxford', 'Oxford'), ('Elizabeth', 'Bates', 'Sales',
'Oxford', 'Oxford'), ('Sundita', 'Kumar', 'Sales', 'Oxford', 'Oxford'), ('Ellen', 'Abel', 'Sales', 'Oxford', 'Oxford'), ('Alyssa', 'Hutton', 'Sales', 'Oxford', 'Oxford'), ('Jonathon', 'Taylor', 'Sales', 'Oxford', 'Oxford'), ('Jack', 'Livingston', 'Sales', 'Oxford', 'Oxford'), ('Charles', 'Johnson', 'Sales', 'Oxford', 'Oxford'), ('Winston', 'Taylor', 'Shipping', 'South San Francisco', 'California'), ('Jean', 'Fleaur', 'Shipping', 'South San Francisco', 'California'), ('Martha', 'Sullivan', 'Shipping', 'South San Francisco', 'California'), ('Girard', 'Geoni', 'Shipping', 'South San Francisco', 'California'), ('Nandita', 'Sarchand', 'Shipping', 'South San Francisco', 'California'), ('Alexis', 'Bull', 'Shipping', 'South San Francisco', 'California'), ('Julia', 'Dellinger', 'Shipping', 'South San Francisco', 'California'),
('Anthony', 'Cabrio', 'Shipping', 'South San Francisco', 'California'), ('Kelly', 'Chung', 'Shipping', 'South San Francisco', 'California'), ('Jennifer', 'Dilly', 'Shipping', 'South San Francisco', 'California'), ('Timothy', 'Gates', 'Shipping', 'South San Francisco', 'California'), ('Randall', 'Perkins', 'Shipping', 'South San Francisco', 'California'), ('Sarah', 'Bell', 'Shipping', 'South San Francisco', 'California'), ('Britney', 'Everett', 'Shipping', 'South San Francisco', 'California'),
('Samuel', 'McCain', 'Shipping', 'South San Francisco', 'California'), ('Vance', 'Jones', 'Shipping', 'South San Francisco', 'California'), ('Alana', 'Walsh', 'Shipping', 'South San Francisco', 'California'), ('Kevin', 'Feeney', 'Shipping', 'South San Francisco', 'California'), ('Donald', 'OConnell', 'Shipping', 'South San Francisco', 'California'), ('Douglas', 'Grant', 'Shipping', 'South San Francisco', 'California'), ('Jennifer', 'Whalen', 'Administration', 'Seattle', 'Washington'), ('Michael', 'Hartstein', 'Marketing', 'Toronto', 'Ontario'), ('Pat', 'Fay', 'Marketing', 'Toronto', 'Ontario'), ('Susan', 'Mavris', 'Human Resources', 'London', ''), ('Hermann', 'Baer', 'Public Relations', 'Munich', 'Bavaria'), ('Shelley', 'Higgins', 'Accounting', 'Seattle', 'Washington'), ('William', 'Gietz', 'Accounting', 'Seattle', 'Washington')]
___TASK 3: [('Ellen', 'Abel', 80, 'Sales'), ('Sundar', 'Ande', 80, 'Sales'), ('Amit', 'Banda', 80, 'Sales'), ('Elizabeth', 'Bates', 80, 'Sales'), ('David', 'Bernstein', 80, 'Sales'), ('Harrison', 'Bloom', 80, 'Sales'), ('Gerald', 'Cambrault', 80, 'Sales'), ('Nanette', 'Cambrault', 80, 'Sales'), ('Louise', 'Doran', 80, 'Sales'), ('Alberto', 'Errazuriz', 80, 'Sales'), ('Tayler', 'Fox', 80, 'Sales'), ('Danielle', 'Greene', 80, 'Sales'), ('Peter', 'Hall', 80, 'Sales'), ('Alyssa', 'Hutton', 80, 'Sales'), ('Charles', 'Johnson', 80, 'Sales'), ('Janette', 'King', 80, 'Sales'), ('Sundita', 'Kumar', 80, 'Sales'), ('David', 'Lee', 80, 'Sales'), ('Jack', 'Livingston', 80, 'Sales'), ('Mattea', 'Marvins', 80, 'Sales'), ('Susan', 'Mavris', 40, 'Human Resources'), ('Allan', 'McEwen', 80, 'Sales'), ('Christopher', 'Olsen', 80, 'Sales'), ('Lisa', 'Ozer', 80, 'Sales'), ('Karen', 'Partners', 80, 'Sales'), ('John', 'Russell', 80, 'Sales'), ('Sarath', 'Sewall', 80, 'Sales'), ('Lindsey', 'Smith', 80, 'Sales'), ('William', 'Smith', 80, 'Sales'), ('Patrick', 'Sully', 80, 'Sales'), ('Jonathon', 'Taylor', 80, 'Sales'), ('Peter', 'Tucker', 80, 'Sales'), ('Oliver', 'Tuvault', 80, 'Sales'), ('Clara', 'Vishney', 80, 'Sales'), ('Eleni', 'Zlotkey', 80, 'Sales')]
___TASK 4: [('Administration',), ('Marketing',), ('Purchasing',), ('Human Resources',), ('Shipping',), ('IT',), ('Public Relations',), ('Sales',), ('Executive',), ('Finance',), ('Accounting',), ('Treasury',), ('Corporate Tax',), ('Control And Credit',), ('Shareholder Services',), ('Benefits',), ('Manufacturing',), ('Construction',), ('Contracting',), ('Operations',), ('IT Support',), ('NOC',), ('IT Helpdesk',), ('Government Sales',), ('Retail Sales',), ('Recruiting',), ('Payroll',)]
___TASK 5: [('Neena', 'Steven'), ('Lex', 'Steven'), ('Alexander', 'Lex'), ('Bruce', 'Alexander'), ('David', 'Alexander'), ('Valli', 'Alexander'), ('Diana', 'Alexander'), ('Nancy', 'Neena'), ('Daniel', 'Nancy'), ('John', 'Nancy'), ('Ismael', 'Nancy'), ('Jose Manuel', 'Nancy'), ('Luis', 'Nancy'), ('Den', 'Steven'), ('Alexander', 'Den'), ('Shelli', 'Den'), ('Sigal', 'Den'), ('Guy', 'Den'), ('Karen', 'Den'), ('Matthew', 'Steven'), ('Adam', 'Steven'), ('Payam', 'Steven'), ('Shanta', 'Steven'), ('Kevin', 'Steven'), ('Julia', 'Matthew'), ('Irene', 'Matthew'), ('James', 'Matthew'), ('Steven', 'Matthew'), ('Laura', 'Adam'), ('Mozhe', 'Adam'), ('James', 'Adam'), ('TJ', 'Adam'), ('Jason', 'Payam'), ('Michael', 'Payam'), ('Ki', 'Payam'), ('Hazel', 'Payam'), ('Renske', 'Shanta'), ('Stephen', 'Shanta'), ('John', 'Shanta'), ('Joshua', 'Shanta'), ('Trenna', 'Kevin'), ('Curtis', 'Kevin'), ('Randall', 'Kevin'), ('Peter', 'Kevin'), ('John', 'Steven'), ('Karen', 'Steven'), ('Alberto', 'Steven'), ('Gerald', 'Steven'), ('Eleni', 'Steven'), ('Peter', 'John'), ('David', 'John'), ('Peter', 'John'), ('Christopher', 'John'), ('Nanette', 'John'), ('Oliver', 'John'), ('Janette', 'Karen'), ('Patrick', 'Karen'), ('Allan', 'Karen'), ('Lindsey', 'Karen'), ('Louise', 'Karen'), ('Sarath', 'Karen'), ('Clara', 'Alberto'), ('Danielle', 'Alberto'), ('Mattea', 'Alberto'), ('David', 'Alberto'), ('Sundar', 'Alberto'), ('Amit', 'Alberto'), ('Lisa', 'Gerald'), ('Harrison', 'Gerald'), ('Tayler', 'Gerald'), ('William', 'Gerald'), ('Elizabeth', 'Gerald'), ('Sundita', 'Gerald'), ('Ellen', 'Eleni'), ('Alyssa', 'Eleni'), ('Jonathon', 'Eleni'), ('Jack', 'Eleni'), ('Kimberely', 'Eleni'), ('Charles', 'Eleni'), ('Winston', 'Matthew'), ('Jean', 'Matthew'), ('Martha', 'Matthew'), ('Girard', 'Matthew'), ('Nandita', 'Adam'), ('Alexis', 'Adam'), ('Julia', 'Adam'), ('Anthony', 'Adam'), ('Kelly', 'Payam'), ('Jennifer', 'Payam'), ('Timothy', 'Payam'), ('Randall', 'Payam'), ('Sarah', 'Shanta'), ('Britney', 'Shanta'), ('Samuel', 'Shanta'), ('Vance', 'Shanta'), ('Alana', 'Kevin'), ('Kevin', 'Kevin'), ('Donald', 'Kevin'), ('Douglas', 'Kevin'), ('Jennifer', 'Neena'), ('Michael', 'Steven'), ('Pat', 'Michael'), ('Susan', 'Neena'), ('Hermann', 'Neena'), ('Shelley', 'Neena'), ('William', 'Shelley')]
___TASK 6: [('President', 'Steven King', 16000), ('Administration Vice President', 'Neena Kochhar', 13000), ('Administration Vice President', 'Lex De Haan', 13000), ('Programmer', 'Alexander Hunold', 1000), ('Programmer', 'Bruce Ernst', 4000), ('Programmer', 'David Austin', 5200), ('Programmer', 'Valli Pataballa', 5200), ('Programmer', 'Diana Lorentz', 5800), ('Finance Manager', 'Nancy Greenberg', 4000), ('Accountant', 'Daniel Faviet', 0), ('Accountant', 'John Chen', 800), ('Accountant', 'Ismael Sciarra', 1300), ('Accountant', 'Jose Manuel Urman', 1200), ('Accountant', 'Luis Popp', 2100), ('Purchasing Manager', 'Den Raphaely', 4000), ('Purchasing Clerk', 'Alexander Khoo', 2400), ('Purchasing Clerk', 'Shelli Baida', 2600), ('Purchasing Clerk', 'Sigal Tobias', 2700), ('Purchasing Clerk', 'Guy Himuro', 2900), ('Purchasing Clerk', 'Karen Colmenares', 3000), ('Stock Manager', 'Matthew Weiss', 500), ('Stock Manager', 'Adam Fripp', 300), ('Stock Manager', 'Payam Kaufling', 600), ('Stock Manager', 'Shanta Vollman', 2000), ('Stock Manager', 'Kevin Mourgos', 2700), ('Stock Clerk', 'Julia Nayer', 1800), ('Stock Clerk', 'Irene Mikkilineni', 2300), ('Stock
Clerk', 'James Landry', 2600), ('Stock Clerk', 'Steven Markle', 2800), ('Stock Clerk', 'Laura Bissot', 1700), ('Stock Clerk', 'Mozhe Atkinson', 2200), ('Stock Clerk', 'James Marlow', 2500), ('Stock Clerk', 'TJ Olson', 2900), ('Stock Clerk', 'Jason Mallin', 1700), ('Stock Clerk', 'Michael Rogers', 2100), ('Stock Clerk', 'Ki Gee', 2600), ('Stock Clerk', 'Hazel Philtanker', 2800), ('Stock Clerk', 'Renske Ladwig', 1400), ('Stock Clerk', 'Stephen Stiles', 1800), ('Stock Clerk', 'John Seo', 2300), ('Stock Clerk', 'Joshua Patel', 2500), ('Stock Clerk', 'Trenna Rajs', 1500), ('Stock Clerk', 'Curtis Davies', 1900), ('Stock Clerk', 'Randall Matos', 2400), ('Stock Clerk', 'Peter Vargas', 2500), ('Sales Manager', 'John Russell', 6000), ('Sales Manager', 'Karen Partners', 6500), ('Sales Manager', 'Alberto Errazuriz', 8000), ('Sales Manager', 'Gerald Cambrault', 9000), ('Sales Manager', 'Eleni Zlotkey', 9500), ('Sales Representative', 'Peter Tucker', 2000), ('Sales Representative', 'David Bernstein', 2500), ('Sales Representative', 'Peter Hall', 3000), ('Sales Representative', 'Christopher Olsen', 4000), ('Sales Representative', 'Nanette Cambrault', 4500), ('Sales Representative', 'Oliver Tuvault', 5000), ('Sales Representative', 'Janette King', 2000), ('Sales Representative', 'Patrick Sully', 2500), ('Sales Representative', 'Allan McEwen', 3000), ('Sales Representative', 'Lindsey Smith', 4000), ('Sales Representative', 'Louise Doran', 4500), ('Sales Representative', 'Sarath Sewall', 5000), ('Sales Representative', 'Clara Vishney', 1500), ('Sales Representative', 'Danielle Greene', 2500), ('Sales Representative', 'Mattea Marvins', 4800), ('Sales
Representative', 'David Lee', 5200), ('Sales Representative', 'Sundar Ande', 5600), ('Sales Representative', 'Amit Banda', 5800), ('Sales Representative', 'Lisa Ozer', 500), ('Sales Representative', 'Harrison Bloom', 2000), ('Sales Representative', 'Tayler Fox', 2400), ('Sales Representative', 'William Smith', 4600), ('Sales Representative', 'Elizabeth Bates', 4700), ('Sales Representative', 'Sundita Kumar', 5900), ('Sales Representative', 'Ellen Abel', 1000), ('Sales Representative', 'Alyssa
Hutton', 3200), ('Sales Representative', 'Jonathon Taylor', 3400), ('Sales Representative', 'Jack Livingston', 3600), ('Sales Representative', 'Kimberely Grant', 5000), ('Sales Representative', 'Charles Johnson', 5800), ('Shipping Clerk', 'Winston Taylor', 2300), ('Shipping Clerk', 'Jean Fleaur', 2400), ('Shipping Clerk', 'Martha
Sullivan', 3000), ('Shipping Clerk', 'Girard Geoni', 2700), ('Shipping Clerk', 'Nandita Sarchand', 1300), ('Shipping Clerk', 'Alexis Bull', 1400), ('Shipping Clerk',
'Julia Dellinger', 2100), ('Shipping Clerk', 'Anthony Cabrio', 2500), ('Shipping Clerk', 'Kelly Chung', 1700), ('Shipping Clerk', 'Jennifer Dilly', 1900), ('Shipping
Clerk', 'Timothy Gates', 2600), ('Shipping Clerk', 'Randall Perkins', 3000), ('Shipping Clerk', 'Sarah Bell', 1500), ('Shipping Clerk', 'Britney Everett', 1600), ('Shipping Clerk', 'Samuel McCain', 2300), ('Shipping Clerk', 'Vance Jones', 2700), ('Shipping Clerk', 'Alana Walsh', 2400), ('Shipping Clerk', 'Kevin Feeney', 2500), ('Shipping Clerk', 'Donald OConnell', 2900), ('Shipping Clerk', 'Douglas Grant', 2900), ('Administration Assistant', 'Jennifer Whalen', 1600), ('Marketing Manager', 'Michael Hartstein', 2000), ('Marketing Representative', 'Pat Fay', 3000), ('Human Resources Representative', 'Susan Mavris', 2500), ('Public Relations Representative', 'Hermann Baer', 500), ('Accounting Manager', 'Shelley Higgins', 4000), ('Public Accountant', 'William Gietz', 700)]
___TASK 7: [('Accountant', 7920.0), ('Accounting Manager', 12000.0), ('Administration Assistant', 4400.0), ('Administration Vice President', 17000.0), ('Finance Manager', 12000.0), ('Human Resources Representative', 6500.0), ('Marketing Manager', 13000.0), ('Marketing Representative', 6000.0), ('President', 24000.0), ('Programmer', 5760.0), ('Public Accountant', 8300.0), ('Public Relations Representative', 10000.0), ('Purchasing Clerk', 2780.0), ('Purchasing Manager', 11000.0), ('Sales Manager', 12200.0), ('Sales Representative', 8350.0), ('Shipping Clerk', 3215.0), ('Stock Clerk', 2785.0), ('Stock Manager', 7280.0)]
___TASK 8: [('Susan Mavris', 6500)]
___TASK 9: [('Accounting', 2), ('Administration', 1), ('Executive', 3), ('Finance', 6), ('Human Resources', 1), ('IT', 5), ('Marketing', 2), ('Public Relations', 1),
('Purchasing', 6), ('Sales', 34), ('Shipping', 45)]
'''
